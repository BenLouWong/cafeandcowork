extends layout

block head
  script(type="application/ld+json").
    {
      "@context": "https://schema.org",
      "@type": "BreadcrumbList",
      "itemListElement": [{
        "@type": "ListItem",
        "position": 1,
        "name": "#{name}",
        "item": "#{site.url}#{url}"
      }]
    }

block body
  include mixins

  .city
    include header

    h2
      each city in cities
        a(class={ active: city.name == name } href=city.url)= city.name

    script.
      document.querySelector('h2 a.active').scrollIntoView();

    .map
      #map

    .search
      input(type="text" placeholder="Search by name, type, or area..." v-model="filter" autofocus)

    .scroll-wrapper
      table
        thead
          tr
            th Score
            th Name
            th WiFi
            th Power
            th Vacancy
            th Comfort
            th Quiet
            th Drinks
            th Food
            th Price
            th View
            th Toilets
            th Music
            th Smoking
            th(title="Standing Tables") Standing
            th(title="Outdoor Seating") Outdoor
            th Cash Only
            th Animals
            th Area
            th Opens
            th Closes
        tbody
          if places.length == 0
            tr
              td(class="empty" colspan="999") No places found ¯\_(ツ)_/¯
          each e in places
            tr(class={ closed: e.closed } data-url=e.url)
              td: +score(e)
              td.truncate
                a(href=e.url title=e.name)= e.name
              td(data-tip="WiFi"): +attribute(e.wifi)
              td(data-tip="Power"): +attribute(e.power)
              td(data-tip="Vacancy"): +attribute(e.vacancy)
              td(data-tip="Comfort"): +attribute(e.comfort)
              td(data-tip="Quiet"): +attribute(e.quiet)
              td(data-tip="Drinks"): +attribute(e.drinks)
              td(data-tip="Food"): +attribute(e.food)
              td(data-tip="Price"): +attribute(e.price)
              td(data-tip="View"): +attribute(e.view)
              td(data-tip="Toilets"): +attribute(e.toilets)
              td(data-tip="Music"): +attribute(e.music)
              td(data-tip="Smoking"): +attribute(e.smoking)
              td(data-tip="Standing Tables"): +attribute(e.standing_tables)
              td(data-tip="Outdoor Seating"): +attribute(e.outdoor_seating)
              td(data-tip="Cash Only"): +attribute(e.cash_only)
              td(data-tip="Animals"): +attribute(e.animals)
              td(data-tip="Area")= e.area
              if isOpenToday(e.hours)
                td(data-tip="Opens")= getOpeningTime(e.hours)
                td(data-tip="Closes")= getClosingTime(e.hours)
              else
                td(colspan=2) Closed Today

  -
    const markers = places.map(e => {
      return {
        name: e.name,
        url: e.url,
        score: e.score,
        coordinates: e.coordinates,
        filter: `${e.name} ${e.type} ${e.area} ${e.station}`
      };
    });

  script.
    CafeAndCowork.City({
      coordinates: !{JSON.stringify(coordinates)},
      places: !{JSON.stringify(markers)},
      table: document.querySelector('table'),
      input: document.querySelector('input')
    });
