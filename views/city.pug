extends layout

block body
  include mixins

  .city
    include header

    h2
      - const currentCityName = city.name
      each city in cities
        a(class={ active: city.name == currentCityName } href=city.url)= city.name

    script.
      document.querySelector('h2 a.active').scrollIntoView();

    .map
      #map

    .search
      input(type="text" placeholder="Search by name, type, or area..." v-model="filter" autofocus)

    .scroll-wrapper
      table
        thead
          tr
            th Score
            th Name
            th WiFi
            th Power
            th Vacancy
            th Comfort
            th Quiet
            th Drinks
            th Food
            th Price
            th View
            th Toilets
            th Music
            th Smoking
            th(title="Standing Tables") Standing
            th(title="Outdoor Seating") Outdoor
            th Cash Only
            th Animals
            th Area
            th Opens
            th Closes
        tbody
          if city.places.length == 0
            tr
              td(class="empty" colspan="999") No places found ¯\_(ツ)_/¯
          each e in city.places
            - const isClosed = isClosedNow(city, e);
            tr(data-url=e.url class={ closed: isClosed, permanentlyClosed: e.closed })
              td: +score(e)
              td.truncate
                a(href=e.url title=e.name)= e.name
                if isClosed
                  span.closed (Closed)
              td(data-tip=e.speed ? `${e.speed} Mb/s` : "WiFi"): +attribute(e.wifi)
              td(data-tip="Power"): +attribute(e.power)
              td(data-tip="Vacancy"): +attribute(e.vacancy)
              td(data-tip="Comfort"): +attribute(e.comfort)
              td(data-tip="Quiet"): +attribute(e.quiet)
              td(data-tip="Drinks"): +attribute(e.drinks)
              td(data-tip="Food"): +attribute(e.food)
              td(data-tip="Price"): +attribute(e.price)
              td(data-tip="View"): +attribute(e.view)
              td(data-tip="Toilets"): +attribute(e.toilets)
              td(data-tip="Music"): +attribute(e.music)
              td(data-tip="Smoking"): +attribute(e.smoking)
              td(data-tip="Standing Tables"): +attribute(e.standing_tables)
              td(data-tip="Outdoor Seating"): +attribute(e.outdoor_seating)
              td(data-tip="Cash Only"): +attribute(e.cash_only)
              td(data-tip="Animals"): +attribute(e.animals)
              td(data-tip="Area")
                if e.areaUrl
                  a(href=e.areaUrl)= e.area
                else
                  span= e.area
              if isClosedToday(city, e)
                td(colspan=2) Closed Today
              else
                td(data-tip="Opens")= getOpeningTime(city, e)
                td(data-tip="Closes")= getClosingTime(city, e)

  -
    const markers = city.places.map(e => {
      return {
        name: e.name,
        url: e.url,
        score: e.score,
        coordinates: e.coordinates,
        filter: `${e.name} ${e.type} ${e.area} ${e.station} ${isClosedNow(city, e) ? 'closed' : 'open'}`,
        hours: e.hours,
      };
    });

  script.
    CafeAndCowork.City({
      coordinates: !{JSON.stringify(city.coordinates)},
      places: !{JSON.stringify(markers)},
      table: document.querySelector('table'),
      input: document.querySelector('input')
    });
